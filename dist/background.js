let s;const i=async()=>{console.log("Initializing background");try{const{available:e}=await ai.languageModel.capabilities();e!=="no"?(s=await ai.languageModel.create({systemPrompt:"Pretend to be an executive assistant that is adjusting the subtext and nuance in a message based on the intended tone. Respond only with the rewritten message, and limit the rewritten message to a reasonable length."}),console.log("Session initialized: AILanguageModel")):console.error("Prompt API is not available")}catch(e){console.error("Error initializing session:",e)}};i();chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"highlightToPopup",title:"Rewrite this text with AI",contexts:["selection"]})});chrome.contextMenus.onClicked.addListener((e,n)=>{e.menuItemId==="highlightToPopup"&&chrome.runtime.sendMessage({action:"sendToPopup",text:e.selectionText})});chrome.runtime.onMessage.addListener((e,n,o)=>e.action==="processInput"?(console.log("Received processInput request:",e),(async()=>{try{const t=await r(e.input,e.tone);console.log("Background listener got this response:",t),o({reply:t})}catch(t){console.error("Error in getAPIResponse:",t),o({reply:`Error: ${t.message}`})}})(),!0):(console.log("No valid action or session/input received."),o({reply:"No valid action or session/input received."}),!0));async function r(e,n){try{n==="business"?(console.log("Business mode"),e="The intended tone is meant to be serious and for a work colleague. Avoid anything problematic but don't be too casual. Here is the sentence: "+e):(console.log("Friendly mode"),e="The intended tone is meant to be friendly. Include occasional exclamation marks and casual language so the recipient feels comfortable. Here is the sentence: "+e);const o=await s.prompt(e);return console.log("getAPIResponse got this result: ",o),o||"No reply returned by API."}catch(o){throw console.error("Error calling Gemini Nano API:",o),new Error("API call failed: "+o.message)}}
